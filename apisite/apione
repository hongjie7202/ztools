#! /bin/bash
#
#   apione - Upload all 0MQ manuals to api.zero.mq
#   Part of the ztools/apione toolkit.
#
#   Author: Pieter Hintjens <ph@imatix.com>
#   License: public domain
#
#   syntax: apione zmq_dir branch category
#
#   Processes a single branch/tag from a specified git repository location.
#   E.g. "apione ../../zeromq2-1 master 2-1-1".
#
#   See README.md for installation & configuration.

TOOLDIR=`dirname $0`
OWN_DIR=$PWD

#   This option controls whether we actually upload or not
#   Set to 0 to suppress Wikidot uploads for testing
#
UPLOAD=1

# This function uploads a file to wikidot
# Error in upload will cause the script to exit with non-zero status
#
#
function do_upload {
    python $TOOLDIR/sendpage.py $1 $2 $3

    if [ $? != 0 ]; then
        echo "Error uploading file to wikidot"
        exit 1
    fi
}

#   This function builds and uploads one branch's documentation
#
function do_branch {
    export ZMQ_DIR=$1
    export BRANCH=$2
    export CATEGORY=$3

    echo "Building docs for $ZMQ_DIR $BRANCH..."
    cd $ZMQ_DIR
    git checkout -q $BRANCH
    sh ./autogen.sh > /dev/null 2>&1
    ./configure --quiet
    cd doc
    make --quiet
    rm *.xml    #   Makefile does not detect version differences for XML
    for a in *.txt; do make `basename $a .txt`.xml; done

    echo "Generating XML pages for manual..."
    FILES=
    for FILE in zmq zmq_*.txt; do
        BASE=`basename $FILE .txt`
        make --quiet $BASE.xml;
        FILES="$FILES $BASE"
    done

    cd $OWN_DIR
    echo "Generating Wikidot pages..."
    for FILE in $FILES; do
        perl $TOOLDIR/xml2wd.pl $ZMQ_DIR/doc/$FILE.xml > $FILE.wd
    done

    if [ $UPLOAD -eq 1 ]; then
        echo "Uploading to api.zero.mq/$CATEGORY..."

        #   Send table of contents as category:_start
        do_upload $CATEGORY "_start" "Ã˜MQ API"

        #   Send template as category:_template
        cp _template.txt _template.wd
        do_upload $CATEGORY "_template" "Category template - generated"

        #   Now send individual man pages
        for FILE in $FILES; do
            TITLE=`egrep --after-context 1 PAGE_TITLE $FILE.wd | egrep zmq`
            do_upload $CATEGORY $FILE $TITLE
        done
    fi

    echo "Cleaning up..."
    rm *.wd
    #   Restore zeromq2 repository to master branch
    cd $ZMQ_DIR
    git checkout -q master
    cd $OWN_DIR
}

if [ ! -z "$3" ]; then
    if [ ! -f $1/doc/zmq.txt ]; then
        echo "Can't find 0MQ doc directory in $1"
        exit
    fi
    do_branch $1 $2 $3
else
    echo "Syntax: apione <zmq_dir> <branch> <category>"
fi
